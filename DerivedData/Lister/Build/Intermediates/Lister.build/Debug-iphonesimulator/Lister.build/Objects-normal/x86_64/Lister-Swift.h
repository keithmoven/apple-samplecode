// Generated by Apple Swift version 2.0 (swiftlang-700.0.38.1 clang-700.0.53)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import Dispatch;
@import CoreGraphics;
@import ListerKit;
@import WatchConnectivity;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class ListsController;
@class UISplitViewController;
@class UINavigationController;
@class ListDocumentsViewController;
@class UIApplication;
@class NSObject;
@class NSUserActivity;
@class NSURL;
@class UIViewController;
@class NSNotification;

SWIFT_CLASS("_TtC6Lister11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate, UISplitViewControllerDelegate>
@property (nonatomic) UIWindow * __nullable window;
@property (nonatomic) ListsController * __null_unspecified listsController;

/// A private, local queue used to ensure serialized access to Cloud containers during application startup.
@property (nonatomic, readonly) dispatch_queue_attr_t __null_unspecified appDelegateQueue;

/// The root view controller of the window will always be a ``UISplitViewController``. This is set up in the main storyboard.
@property (nonatomic, readonly) UISplitViewController * __nonnull splitViewController;

/// The primary view controller of the split view controller defined in the main storyboard.
@property (nonatomic, readonly) UINavigationController * __nonnull primaryViewController;

/// The view controller that displays the list of documents. If it's not visible, then this value is ``nil``.
@property (nonatomic, readonly) ListDocumentsViewController * __nullable listDocumentsViewController;
- (BOOL)application:(UIApplication * __nonnull)application willFinishLaunchingWithOptions:(NSDictionary * __nullable)launchOptions;
- (BOOL)application:(UIApplication * __nonnull)application didFinishLaunchingWithOptions:(NSDictionary * __nullable)launchOptions;
- (void)applicationDidBecomeActive:(UIApplication * __nonnull)application;
- (BOOL)application:(UIApplication * __nonnull)_ continueUserActivity:(NSUserActivity * __nonnull)userActivity restorationHandler:(void (^ __nonnull)(NSArray * __nullable))restorationHandler;
- (BOOL)application:(UIApplication * __nonnull)application openURL:(NSURL * __nonnull)url sourceApplication:(NSString * __nullable)sourceApplication annotation:(id __nonnull)annotation;
- (BOOL)splitViewController:(UISplitViewController * __nonnull)splitViewController collapseSecondaryViewController:(UIViewController * __nonnull)secondaryViewController ontoPrimaryViewController:(UIViewController * __nonnull)_;
- (UIViewController * __nullable)splitViewController:(UISplitViewController * __nonnull)splitViewController separateSecondaryViewControllerFromPrimaryViewController:(UIViewController * __nonnull)_;
- (void)handleUbiquityIdentityDidChangeNotification:(NSNotification * __nonnull)notification;
- (void)setupUserStoragePreferences;
- (void)promptUserForStorageOption;
- (void)configureListsControllerWithAccountChanged:(BOOL)accountChanged storageOptionChangeHandler:(void (^ __nullable)(void))storageOptionChangeHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;


/// A UIView subclass that's used to test whether or not a ``colorTap(_:)`` action occurs from a view that we designate as color tappable (e.g. the "Color" label should not be tappable).
SWIFT_CLASS("_TtC6Lister17ColorTappableView")
@interface ColorTappableView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;

SWIFT_CLASS("_TtC6Lister8ListCell")
@interface ListCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified label;
@property (nonatomic, weak) IBOutlet UIView * __null_unspecified listColorView;
- (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITapGestureRecognizer;
@protocol ListColorCellDelegate;

SWIFT_CLASS("_TtC6Lister13ListColorCell")
@interface ListColorCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UIView * __null_unspecified gray;
@property (nonatomic, weak) IBOutlet UIView * __null_unspecified blue;
@property (nonatomic, weak) IBOutlet UIView * __null_unspecified green;
@property (nonatomic, weak) IBOutlet UIView * __null_unspecified yellow;
@property (nonatomic, weak) IBOutlet UIView * __null_unspecified orange;
@property (nonatomic, weak) IBOutlet UIView * __null_unspecified red;
@property (nonatomic, weak) id <ListColorCellDelegate> __nullable delegate;
- (void)configure;
- (IBAction)colorTap:(UITapGestureRecognizer * __nonnull)tapGestureRecognizer;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// Provides the ability to send a delegate a message about newly created list info objects.
SWIFT_PROTOCOL("_TtP6Lister21ListColorCellDelegate_")
@protocol ListColorCellDelegate
- (void)listColorCellDidChangeSelectedColor:(ListColorCell * __nonnull)listColorCell;
@end

@class UIBarButtonItem;
@class UIDocumentMenuViewController;
@class UIDocumentPickerViewController;
@class ListInfo;
@class NSError;
@class UITableView;
@class NSIndexPath;
@class WCSession;
@class WCSessionFileTransfer;
@class WCSessionFile;
@class UIStoryboardSegue;
@class NSBundle;

SWIFT_CLASS("_TtC6Lister27ListDocumentsViewController")
@interface ListDocumentsViewController : UITableViewController <ListsControllerDelegate, UIDocumentMenuDelegate, UIDocumentPickerDelegate, WCSessionDelegate>
@property (nonatomic) ListsController * __null_unspecified listsController;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)restoreUserActivityState:(NSUserActivity * __nonnull)activity;

/// Note that the document picker requires that code signing, entitlements, and provisioning for the project have been configured before you run Lister. If you run the app without configuring entitlements correctly, an exception when this method is invoked (i.e. when the "+" button is clicked).
- (IBAction)pickDocument:(UIBarButtonItem * __nonnull)barButtonItem;
- (void)documentMenu:(UIDocumentMenuViewController * __nonnull)documentMenu didPickDocumentPicker:(UIDocumentPickerViewController * __nonnull)documentPicker;
- (void)documentMenuWasCancelled:(UIDocumentMenuViewController * __nonnull)documentMenu;
- (void)documentPicker:(UIDocumentPickerViewController * __nonnull)controller didPickDocumentAtURL:(NSURL * __nonnull)url;
- (void)documentPickerWasCancelled:(UIDocumentPickerViewController * __nonnull)controller;
- (void)listsControllerWillChangeContent:(ListsController * __nonnull)listsController;
- (void)listsController:(ListsController * __nonnull)listsController didInsertListInfo:(ListInfo * __nonnull)listInfo atIndex:(NSInteger)index;
- (void)listsController:(ListsController * __nonnull)listsController didRemoveListInfo:(ListInfo * __nonnull)listInfo atIndex:(NSInteger)index;
- (void)listsController:(ListsController * __nonnull)listsController didUpdateListInfo:(ListInfo * __nonnull)listInfo atIndex:(NSInteger)index;
- (void)listsControllerDidChangeContent:(ListsController * __nonnull)listsController;
- (void)listsController:(ListsController * __nonnull)listsController didFailCreatingListInfo:(ListInfo * __nonnull)listInfo withError:(NSError * __nonnull)error;
- (void)listsController:(ListsController * __nonnull)listsController didFailRemovingListInfo:(ListInfo * __nonnull)listInfo withError:(NSError * __nonnull)error;
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)tableView:(UITableView * __nonnull)tableView willDisplayCell:(UITableViewCell * __nonnull)cell forRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (BOOL)tableView:(UITableView * __nonnull)tableView canEditRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (BOOL)tableView:(UITableView * __nonnull)tableView canMoveRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)sessionWatchStateDidChange:(WCSession * __nonnull)session;
- (void)session:(WCSession * __nonnull)session didFinishFileTransfer:(WCSessionFileTransfer * __nonnull)fileTransfer error:(NSError * __nullable)error;
- (void)session:(WCSession * __nonnull)session didReceiveFile:(WCSessionFile * __nonnull)file;
- (void)prepareForSegue:(UIStoryboardSegue * __nonnull)segue sender:(id __nullable)sender;
- (void)handleContentSizeCategoryDidChangeNotification:(NSNotification * __nonnull)_;
- (void)updateWatchConnectivitySessionApplicationContext;
- (nonnull instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;
@class CheckBox;

SWIFT_CLASS("_TtC6Lister12ListItemCell")
@interface ListItemCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UITextField * __null_unspecified textField;
@property (nonatomic, weak) IBOutlet CheckBox * __null_unspecified checkBox;
@property (nonatomic) BOOL isComplete;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class ListDocument;
@class NSUndoManager;
@class AllListItemsPresenter;

SWIFT_CLASS("_TtC6Lister18ListViewController")
@interface ListViewController : UITableViewController <UITextFieldDelegate, ListColorCellDelegate, ListDocumentDelegate>
@property (nonatomic) ListsController * __null_unspecified listsController;

/// Set in ``textFieldDidBeginEditing(_:)``. ``nil`` otherwise.
@property (nonatomic, weak) UITextField * __nullable activeTextField;

/// Set in ``configureWithListInfo(_:)``. ``nil`` otherwise.
@property (nonatomic) ListInfo * __nullable listInfo;
@property (nonatomic) ListDocument * __null_unspecified document;
@property (nonatomic, readonly) NSUndoManager * __nullable undoManager;
@property (nonatomic, readonly) AllListItemsPresenter * __null_unspecified listPresenter;
@property (nonatomic, readonly) NSURL * __nonnull documentURL;
@property (nonatomic, readonly, copy) NSArray<UIBarButtonItem *> * __nonnull listToolbarItems;
@property (nonatomic, copy) NSDictionary<NSString *, id> * __nonnull textAttributes;
- (BOOL)canBecomeFirstResponder;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)configureWithListInfo:(ListInfo * __nonnull)aListInfo;
- (void)handleDocumentStateChangedNotification:(NSNotification * __nonnull)notification;
- (void)setEditing:(BOOL)editing animated:(BOOL)animated;
- (NSInteger)tableView:(UITableView * __nonnull)_ numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)_ cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (BOOL)tableView:(UITableView * __nonnull)_ canEditRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (BOOL)tableView:(UITableView * __nonnull)_ canMoveRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)tableView:(UITableView * __nonnull)_ commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)tableView:(UITableView * __nonnull)_ moveRowAtIndexPath:(NSIndexPath * __nonnull)fromIndexPath toIndexPath:(NSIndexPath * __nonnull)toIndexPath;
- (void)tableView:(UITableView * __nonnull)_ willDisplayCell:(UITableViewCell * __nonnull)cell forRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)tableView:(UITableView * __nonnull)_ willBeginEditingRowAtIndexPath:(NSIndexPath * __nonnull)willBeginEditingRowAtIndexPath;
- (void)tableView:(UITableView * __nonnull)_ didEndEditingRowAtIndexPath:(NSIndexPath * __nonnull)didEndEditingRowAtIndexPath;
- (void)tableView:(UITableView * __nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (NSIndexPath * __nonnull)tableView:(UITableView * __nonnull)_ targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath * __nonnull)fromIndexPath toProposedIndexPath:(NSIndexPath * __nonnull)proposedIndexPath;
- (void)textFieldDidBeginEditing:(UITextField * __nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * __nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * __nonnull)textField;
- (void)listColorCellDidChangeSelectedColor:(ListColorCell * __nonnull)listColorCell;
- (IBAction)deleteList:(UIBarButtonItem * __nonnull)_;
- (IBAction)checkBoxTapped:(CheckBox * __nonnull)sender;
- (void)listDocumentWasDeleted:(ListDocument * __nonnull)listDocument;
- (void)updateInterfaceWithTextAttributes;
- (void)hideViewControllerAfterListWasDeleted;
- (void)configureListItemCell:(ListItemCell * __nonnull)listItemCell forRow:(NSInteger)row;
- (void)triggerNewDataForWidget;
- (void)resolveConflicts;
- (NSIndexPath * __nullable)indexPathForView:(UIView * __nonnull)view;
- (nonnull instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIButton;
@class UITouch;
@class UIEvent;
@class UIToolbar;

SWIFT_CLASS("_TtC6Lister25NewListDocumentController")
@interface NewListDocumentController : UIViewController <UITextFieldDelegate>
@property (nonatomic, weak) IBOutlet UIButton * __null_unspecified grayButton;
@property (nonatomic, weak) IBOutlet UIButton * __null_unspecified blueButton;
@property (nonatomic, weak) IBOutlet UIButton * __null_unspecified greenButton;
@property (nonatomic, weak) IBOutlet UIButton * __null_unspecified yellowButton;
@property (nonatomic, weak) IBOutlet UIButton * __null_unspecified orangeButton;
@property (nonatomic, weak) IBOutlet UIButton * __null_unspecified redButton;
@property (nonatomic, weak) IBOutlet UIBarButtonItem * __null_unspecified saveButton;
@property (nonatomic, weak) IBOutlet UIToolbar * __null_unspecified toolbar;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified titleLabel;
@property (nonatomic, weak) IBOutlet UITextField * __null_unspecified nameField;
@property (nonatomic, weak) UIButton * __nullable selectedButton;
@property (nonatomic, copy) NSString * __nullable selectedTitle;
@property (nonatomic) ListsController * __null_unspecified listsController;
- (IBAction)pickColor:(UIButton * __nonnull)sender;
- (IBAction)save:(id __nonnull)sender;
- (IBAction)cancel:(id __nonnull)sender;
- (void)touchesBegan:(NSSet<UITouch *> * __nonnull)touches withEvent:(UIEvent * __nullable)event;
- (BOOL)textField:(UITextField * __nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * __nonnull)string;
- (void)textFieldDidEndEditing:(UITextField * __nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * __nonnull)textField;
- (void)updateForProposedListName:(NSString * __nonnull)name;
- (nonnull instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
